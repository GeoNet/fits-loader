name: fits loader

on:
  push: {}
  pull_request: {}
  schedule:
    - cron: "0 0 * * *"
  release:
    types: [published]
  workflow_dispatch: {}

permissions:
  actions: read
  contents: write
  pull-requests: write
  id-token: write
  security-events: write
  statuses: write
  checks: write

jobs:
  go-build:
    if: ${{ contains(fromJSON('["workflow_call", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-go-build-smoke-test.yml@main
  gofmt:
    if: ${{ contains(fromJSON('["workflow_call", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-gofmt.yml@main
  golangci-lint:
    if: ${{ contains(fromJSON('["workflow_call", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-golangci-lint.yml@main
  go-vet:
    if: ${{ contains(fromJSON('["workflow_call", "push", "pull_request"]'), github.event_name) && startsWith(github.repository, 'GeoNet/') != false }}
    uses: GeoNet/Actions/.github/workflows/reusable-go-vet.yml@main
  go-test:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-2
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
          check-latest: true
      - name: test
        run: |
          go test -v -cover ./...
